import{_ as a,c as i,o as e,af as n}from"./chunks/framework.26avpAeN.js";const c=JSON.parse('{"title":"部署指南","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/deployment.md","filePath":"guide/deployment.md"}'),l={name:"guide/deployment.md"};function h(t,s,d,p,r,k){return e(),i("div",null,[...s[0]||(s[0]=[n(`<h1 id="部署指南" tabindex="-1">部署指南 <a class="header-anchor" href="#部署指南" aria-label="Permalink to “部署指南”">​</a></h1><h2 id="linux-服务器部署" tabindex="-1">Linux 服务器部署 <a class="header-anchor" href="#linux-服务器部署" aria-label="Permalink to “Linux 服务器部署”">​</a></h2><h3 id="_1-下载-release-文件" tabindex="-1">1. 下载 RELEASE 文件 <a class="header-anchor" href="#_1-下载-release-文件" aria-label="Permalink to “1. 下载 RELEASE 文件”">​</a></h3><p>前往 <a href="https://github.com/carrot-hu23/dst-admin-go/releases" target="_blank" rel="noreferrer">GitHub Releases</a> 下载适用于 Linux 的最新版本。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 示例：下载 1.5.0 版本（请替换为最新版本）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/hujinbo23/dst-admin-go/releases/download/1.5.0/dst-admin-go.1.5.0.tgz</span></span></code></pre></div><h3 id="_2-解压文件" tabindex="-1">2. 解压文件 <a class="header-anchor" href="#_2-解压文件" aria-label="Permalink to “2. 解压文件”">​</a></h3><p>使用 <code>tar</code> 命令解压下载的文件：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -zvxf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dst-admin-go.1.5.0.tgz</span></span></code></pre></div><h3 id="_3-进入目录" tabindex="-1">3. 进入目录 <a class="header-anchor" href="#_3-进入目录" aria-label="Permalink to “3. 进入目录”">​</a></h3><p>解压后，切换到解压出的目录中：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dst-admin-go.1.5.0</span></span></code></pre></div><h3 id="_4-安装环境-可选" tabindex="-1">4. 安装环境（可选） <a class="header-anchor" href="#_4-安装环境-可选" aria-label="Permalink to “4. 安装环境（可选）”">​</a></h3><p>如果服务器上尚未安装饥荒 Dedicated Server 环境，可以运行脚本自动安装：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CentOS 系统</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install_dst_centos.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./install_dst_centos.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ubuntu 系统</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install_dst_ubuntu.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./install_dst_ubuntu.sh</span></span></code></pre></div><h4 id="手动安装-steamcmd-如果需要" tabindex="-1">手动安装 SteamCMD（如果需要） <a class="header-anchor" href="#手动安装-steamcmd-如果需要" aria-label="Permalink to “手动安装 SteamCMD（如果需要）”">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ubuntu/Debian</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib32gcc-s1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 32位库支持</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add-apt-repository</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiverse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> steamcmd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CentOS 环境问题: 如果手动安装或遇到问题，可能需要手动安装依赖库</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># sudo yum -y update</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># sudo yum -y install glibc.i686 libstdc++.i686 screen libcurl.i686</span></span></code></pre></div><h4 id="_64位启动问题解决" tabindex="-1">64位启动问题解决 <a class="header-anchor" href="#_64位启动问题解决" aria-label="Permalink to “64位启动问题解决”">​</a></h4><p>如果遇到64位系统启动问题，可能需要创建库链接：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/lib64/libcurl.so.4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/dst-dedicated-server/bin64/lib64/libcurl-gnutls.so.4</span></span></code></pre></div><h3 id="_5-启动面板" tabindex="-1">5. 启动面板 <a class="header-anchor" href="#_5-启动面板" aria-label="Permalink to “5. 启动面板”">​</a></h3><p>给启动脚本添加执行权限并运行：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./start.sh</span></span></code></pre></div><p>通常选择选项 1 启动。面板默认会在 <code>8082</code> 端口启动。</p><h3 id="_6-初始化面板" tabindex="-1">6. 初始化面板 <a class="header-anchor" href="#_6-初始化面板" aria-label="Permalink to “6. 初始化面板”">​</a></h3><p>在浏览器中访问 <code>http://你的服务器IP:8082</code>。</p><p>按照提示初始化管理员账号信息。</p><h3 id="_7-配置面板" tabindex="-1">7. 配置面板 <a class="header-anchor" href="#_7-配置面板" aria-label="Permalink to “7. 配置面板”">​</a></h3><p>登录后，等待面板完成必要的初始化（如检测或安装饥荒服务）。</p><p>进入&quot;系统设置&quot;，配置 <code>备份路径</code> 和 <code>mod下载路径</code>。如果之前通过脚本安装了环境，这些路径通常会自动填充。</p><p>如果需要更改面板默认端口 (8082)，可以修改项目目录下的 <code>config.yml</code> 文件中的 <code>port</code> 配置项。</p><h3 id="_8-创建并启动房间" tabindex="-1">8. 创建并启动房间 <a class="header-anchor" href="#_8-创建并启动房间" aria-label="Permalink to “8. 创建并启动房间”">​</a></h3><p>修改或创建存档信息（世界配置、房间设置等）。</p><p>完成配置后，即可启动游戏房间。</p><h2 id="windows-平台部署" tabindex="-1">Windows 平台部署 <a class="header-anchor" href="#windows-平台部署" aria-label="Permalink to “Windows 平台部署”">​</a></h2><h3 id="_1-下载文件" tabindex="-1">1. 下载文件 <a class="header-anchor" href="#_1-下载文件" aria-label="Permalink to “1. 下载文件”">​</a></h3><p>从 Release 页面下载 Windows 版本的压缩包。</p><h3 id="_2-解压文件-1" tabindex="-1">2. 解压文件 <a class="header-anchor" href="#_2-解压文件-1" aria-label="Permalink to “2. 解压文件”">​</a></h3><p>将下载的文件解压到目标目录。</p><h3 id="_3-启动面板" tabindex="-1">3. 启动面板 <a class="header-anchor" href="#_3-启动面板" aria-label="Permalink to “3. 启动面板”">​</a></h3><p>直接运行解压目录下的 <code>dst-admin-go.exe</code> 文件启动面板。</p><h3 id="_4-访问面板" tabindex="-1">4. 访问面板 <a class="header-anchor" href="#_4-访问面板" aria-label="Permalink to “4. 访问面板”">​</a></h3><p>在浏览器中访问面板地址（通常为 <code>http://localhost:8082</code> 或根据提示），并进行初始化设置。</p><h3 id="_5-安装steamcmd-和-饥荒" tabindex="-1">5. 安装steamcmd 和 饥荒 <a class="header-anchor" href="#_5-安装steamcmd-和-饥荒" aria-label="Permalink to “5. 安装steamcmd 和 饥荒”">​</a></h3><ol><li>访问 <a href="https://developer.valvesoftware.com/wiki/SteamCMD" target="_blank" rel="noreferrer">SteamCMD 官方页面</a> 下载适用于 Windows 的 SteamCMD。</li><li>下载完成后，将 <code>steamcmd.zip</code> 解压到您希望安装的目录，例如 <code>C:\\steamcmd\\</code>。</li><li>进入解压目录，双击运行 <code>steamcmd.exe</code>。</li><li>等待 SteamCMD 更新完成，完成后会出现 <code>Steam&gt;</code> 提示符。</li><li>输入以下命令安装饥荒专用服务器：<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>login anonymous</span></span>
<span class="line"><span>force_install_dir C:\\dst-dedicated-server</span></span>
<span class="line"><span>app_update 343050 validate</span></span>
<span class="line"><span>quit</span></span></code></pre></div>这会将饥荒专用服务器安装到 <code>C:\\dst-dedicated-server</code> 目录。</li></ol><h3 id="_6-配置路径" tabindex="-1">6. 配置路径 <a class="header-anchor" href="#_6-配置路径" aria-label="Permalink to “6. 配置路径”">​</a></h3><p>在面板的设置中，指定 <code>steamcmd</code> 和饥荒 Dedicated Server 的安装路径：</p><ul><li>SteamCMD 路径：例如 <code>C:\\steamcmd\\steamcmd.exe</code></li><li>饥荒服务器路径：例如 <code>C:\\dst-dedicated-server</code></li></ul><p>您也可以直接编辑 <code>dst_config</code> 文件来配置这些路径，请参考 <a href="/dst-admin-go-docs/guide/configuration.html">配置说明</a> 了解详细信息。</p><h3 id="_7-创建并启动房间" tabindex="-1">7. 创建并启动房间 <a class="header-anchor" href="#_7-创建并启动房间" aria-label="Permalink to “7. 创建并启动房间”">​</a></h3><p>配置存档信息并启动房间。</p><h2 id="docker-部署" tabindex="-1">Docker 部署 <a class="header-anchor" href="#docker-部署" aria-label="Permalink to “Docker 部署”">​</a></h2><p>如果您的服务器支持 Docker，可以使用 Docker 来部署 <code>dst-admin-go</code>。详情请参考 <a href="/dst-admin-go-docs/guide/docker.html">Docker 部署</a> 文档。</p><h2 id="防火墙配置" tabindex="-1">防火墙配置 <a class="header-anchor" href="#防火墙配置" aria-label="Permalink to “防火墙配置”">​</a></h2><p>确保防火墙允许 <code>dst-admin-go</code> 和饥荒服务器的端口通过。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ubuntu/Debian ufw</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ufw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> allow</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8082/tcp</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # dst-admin-go 管理面板端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ufw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> allow</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10999/udp</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 饥荒服务器默认 UDP 端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ufw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> allow</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10998/udp</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 饥荒服务器备用 UDP 端口</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 根据您的 cluster.ini 配置开放其他端口</span></span></code></pre></div><h2 id="反向代理-可选" tabindex="-1">反向代理 (可选) <a class="header-anchor" href="#反向代理-可选" aria-label="Permalink to “反向代理 (可选)”">​</a></h2><p>为了通过域名访问管理面板或添加 SSL 证书，您可以使用 Nginx 或 Apache 等反向代理服务器。</p><h3 id="nginx-示例配置" tabindex="-1">Nginx 示例配置 <a class="header-anchor" href="#nginx-示例配置" aria-label="Permalink to “Nginx 示例配置”">​</a></h3><div class="language-nginx"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">your_domain.com;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http://localhost:8082;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Host $host;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Real-IP $remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Forwarded-Proto $scheme;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>配置完成后，重启 Nginx 服务。</p><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to “常见问题”">​</a></h2><ul><li><p><strong>Q: 服务启动失败，提示权限不足？</strong> A: 确保运行 <code>dst-admin-go</code> 的用户对饥荒服务器目录和集群配置目录有读写权限。</p></li><li><p><strong>Q: 无法通过 IP 访问管理面板？</strong> A: 检查面板是否在 <code>8082</code> 端口启动，并确认防火墙规则已放行端口。</p></li><li><p><strong>Q: 饥荒服务器无法启动？</strong> A: 检查集群配置文件（如 <code>cluster.ini</code>, <code>cluster_token.txt</code>）是否存在且配置正确。</p></li></ul>`,62)])])}const g=a(l,[["render",h]]);export{c as __pageData,g as default};
