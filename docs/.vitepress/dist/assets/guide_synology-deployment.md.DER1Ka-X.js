import{_ as e,c as t,o as a,af as r,ag as d,ah as l,ai as i,aj as s,ak as c,al as n}from"./chunks/framework.CSLzPq2T.js";const P=JSON.parse('{"title":"群晖系统部署教程","description":"","frontmatter":{},"headers":[],"relativePath":"guide/synology-deployment.md","filePath":"guide/synology-deployment.md"}'),p={name:"guide/synology-deployment.md"};function h(g,o,_,m,b,k){return a(),t("div",null,[...o[0]||(o[0]=[r('<h1 id="群晖系统部署教程" tabindex="-1">群晖系统部署教程 <a class="header-anchor" href="#群晖系统部署教程" aria-label="Permalink to “群晖系统部署教程”">​</a></h1><h2 id="部署步骤" tabindex="-1">部署步骤 <a class="header-anchor" href="#部署步骤" aria-label="Permalink to “部署步骤”">​</a></h2><h3 id="_1-搜索并下载-docker-镜像" tabindex="-1">1. 搜索并下载 Docker 镜像 <a class="header-anchor" href="#_1-搜索并下载-docker-镜像" aria-label="Permalink to “1. 搜索并下载 Docker 镜像”">​</a></h3><ol><li>打开群晖自带的 <strong>Docker</strong> 应用。</li><li>在注册表中搜索 <code>hujinbo</code>。</li><li>选择搜索结果中的镜像，点击下载。</li><li>手动选择 <code>1.5.0</code> 版本，或者直接选择自动下载最新版本。</li></ol><p><img src="'+d+'" alt=""></p><h3 id="_2-创建必要的文件夹" tabindex="-1">2. 创建必要的文件夹 <a class="header-anchor" href="#_2-创建必要的文件夹" aria-label="Permalink to “2. 创建必要的文件夹”">​</a></h3><p>在开始创建容器之前，需要在群晖的文件系统中提前创建好相应的文件夹。</p><ol><li>在你希望存放数据的目录下（例如 <code>docker</code> 目录），创建一个名为 <code>dst</code> 的文件夹。</li><li>在 <code>dst</code> 文件夹内，创建以下三个子文件夹： <ul><li><code>backup</code></li><li><code>mod</code></li><li><code>root</code></li></ul></li><li>进入 <code>root</code> 文件夹，再创建一个名为 <code>app</code> 的子文件夹。</li><li>最后，在 <code>app</code> 文件夹内创建一个名为 <code>dst-dedicated-server</code> 的子文件夹。</li></ol><p>至此，文件夹创建步骤已经完成。</p><h3 id="_3-创建并配置-docker-容器" tabindex="-1">3. 创建并配置 Docker 容器 <a class="header-anchor" href="#_3-创建并配置-docker-容器" aria-label="Permalink to “3. 创建并配置 Docker 容器”">​</a></h3><p>我们开始创建容器。本教程基于 <strong>DSM 7.2</strong> 系统编写，低版本系统相关步骤可能略有不同，请注意区分。</p><ol><li>在 Docker 应用的 <strong>映像</strong> 菜单中，找到我们刚才下载好的服务器镜像。</li><li>右键点击该镜像，选择 <strong>启动</strong> 或 <strong>创建容器</strong>。</li><li>（可选）在容器设置中，可以勾选 <strong>启用自动重新启动</strong> 选项。建议在你最后测试好服务器运行正常后再开启此选项。</li></ol><p><img src="'+l+'" alt=""></p><h4 id="_3-1-路由器端口映射" tabindex="-1">3.1 路由器端口映射 <a class="header-anchor" href="#_3-1-路由器端口映射" aria-label="Permalink to “3.1 路由器端口映射”">​</a></h4><p>在你的路由器管理界面中，需要做对应的端口映射：</p><ul><li><strong>管理面板端口</strong>：<code>8082</code> (TCP)</li><li><strong>游戏服务器端口</strong>：<code>10998</code> 到 <code>11018</code> (UDP)。可以配置为范围端口映射。 <ul><li>例如，将外部端口 <code>10998-11018</code> 映射到群晖 IP 的 <code>10998-11018</code>。</li></ul></li><li>端口映射的 <strong>本地 IP</strong> 请填写你的群晖系统在局域网中的 IP 地址。</li></ul><p><img src="'+i+'" alt=""></p><h4 id="_3-2-映射本地文件夹" tabindex="-1">3.2 映射本地文件夹 <a class="header-anchor" href="#_3-2-映射本地文件夹" aria-label="Permalink to “3.2 映射本地文件夹”">​</a></h4><p>接下来，我们需要将刚才创建好的文件夹映射到容器内部。</p><ol><li>在容器创建向导中，找到 <strong>卷</strong> 或 <strong>文件夹映射</strong> 设置。</li><li>按照下表添加映射：</li></ol><table tabindex="0"><thead><tr><th>本地文件夹路径 (宿主机)</th><th>容器内路径 (Mount path)</th></tr></thead><tbody><tr><td><code>/docker/dst/backup</code></td><td><code>/app/dst/save</code></td></tr><tr><td><code>/docker/dst/mod</code></td><td><code>/app/dst/mod</code></td></tr><tr><td><code>/dst/root/app/dst-dedicated-server</code></td><td><code>/app/dst/dst-dedicated-server</code></td></tr></tbody></table><p><img src="'+s+'" alt=""></p><blockquote><p><strong>注意</strong>：这里的映射目录可能和网上其他教程略有不同。这是经过本人测试后，确认核心文件夹能方便进行可视化管理的方案。如果有不同想法，欢迎自行进一步测试。这里只保证这样映射能较方便地管理饥荒服务器面板，但不一定是唯一或最“正确”的映射方案。</p></blockquote><h4 id="_3-3-设置环境变量与网络" tabindex="-1">3.3 设置环境变量与网络 <a class="header-anchor" href="#_3-3-设置环境变量与网络" aria-label="Permalink to “3.3 设置环境变量与网络”">​</a></h4><ol><li><p>在容器设置中，找到 <strong>环境变量</strong> 部分。</p></li><li><p>添加一个环境变量：</p><ul><li><strong>键 (Key)</strong>: <code>TZ</code></li><li><strong>值 (Value)</strong>: <code>Asia/Shanghai</code> (或你所在的时区，例如 <code>UTC</code>) <img src="'+c+'" alt=""></li></ul></li><li><p>在容器设置中，找到 <strong>网络</strong> 部分。</p></li><li><p>将网络类型选择为 <strong>host</strong> (主机网络模式)。 <img src="'+n+'" alt=""></p></li></ol><h3 id="_4-启动容器" tabindex="-1">4. 启动容器 <a class="header-anchor" href="#_4-启动容器" aria-label="Permalink to “4. 启动容器”">​</a></h3><p>完成以上所有设置后，点击 <strong>应用</strong> 或 <strong>完成</strong> 以保存并启动容器。</p><p>容器搭建到这一步基本就结束了。接下来就是等待容器下载并安装各种必需的组件（如 SteamCMD 和 饥荒专用服务器）。</p><h3 id="_5-访问管理面板" tabindex="-1">5. 访问管理面板 <a class="header-anchor" href="#_5-访问管理面板" aria-label="Permalink to “5. 访问管理面板”">​</a></h3><p>组件下载和配置完成后，你就可以访问管理面板了：</p><ul><li><strong>局域网访问</strong>：在浏览器中访问 <code>http://你的群晖局域网IP:8082</code>。</li><li><strong>公网访问</strong>：在浏览器中访问 <code>http://你的公网IP:8082</code> 或 <code>http://你的域名:8082</code> (如果你配置了域名解析)。</li></ul><p>面板的具体设置可以参考项目提供的其他教程，此处不再赘述。</p>',32)])])}const f=e(p,[["render",h]]);export{P as __pageData,f as default};
